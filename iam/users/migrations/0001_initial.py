# Generated by Django 4.1 on 2024-01-29 17:20

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_by', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='Create by')),
                ('updated_by', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='Updated by')),
                ('email', models.EmailField(max_length=255, verbose_name='Email Address')),
                ('username', models.CharField(max_length=500, unique=True, validators=[django.core.validators.RegexValidator(message="Sorry, but use of '@' symbol is not allowed", regex='^[^@]*$')], verbose_name='Username')),
                ('active_status', models.PositiveSmallIntegerField(choices=[(1, 'Active'), (2, 'Deactivated'), (3, 'Blocked'), (4, 'Inactive')], default=4, verbose_name='Active Status')),
                ('mobile_number', models.CharField(blank=True, max_length=12, null=True, verbose_name='Mobile Number')),
                ('country', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(limit_value=1), django.core.validators.MaxValueValidator(limit_value=400)], verbose_name='Country')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'User',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_by', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='Create by')),
                ('updated_by', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='Updated by')),
                ('GroupId', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Id')),
                ('Name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('ActiveStatus', models.PositiveSmallIntegerField(choices=[(1, 'Active'), (2, 'Deactivated'), (3, 'Blocked'), (4, 'Inactive')], default=1, verbose_name='Active Status')),
            ],
            options={
                'verbose_name': 'Group',
                'verbose_name_plural': 'Groups',
                'db_table': 'Group',
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_by', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='Create by')),
                ('updated_by', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='Updated by')),
                ('UserGroupId', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Id')),
                ('Group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='UsersGroup', to='users.group')),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='UserGroups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'UserGroup',
                'verbose_name_plural': 'UsersGroups',
                'db_table': 'UserGroup',
            },
        ),
    ]
